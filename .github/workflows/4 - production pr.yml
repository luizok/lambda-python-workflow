name: PR Validation Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  validate:
    name: PR Validation
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_SYSTEM_TOKEN }}
    outputs:
      trello_card_id: ${{ steps.trello_card.outputs.id }}
      pr_number: ${{ steps.pr.outputs.number }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get PR Number
      id: pr
      run: |
        echo "::set-output name=number::$(echo $GITHUB_REF | cut -d'/' -f3)"

    - name: Enable Auto Merge
      if: github.event.action == 'opened'
      env:
        GH_TOKEN: ${{ secrets.GH_SYSTEM_TOKEN }}
      run: |
        gh pr merge ${{ steps.pr.outputs.number }} --merge --auto

    - name: Validate PR Message
      id: trello_card
      run: |
        curl -X POST -s ${{ secrets.API_GTW_URL }}/validatePullRequest \
          -H "Content-Type: application/json" \
          -d '{
            "repository": "${{ github.repository }}",
            "pr_number": ${{ steps.pr.outputs.number }}
          }' > res.json

        cat res.json

        echo "::set-output name=id::$(cat res.json | jq -r '.trelloCardId')"
        test $(cat res.json | jq -r '.isValid') = "true"

      # TODO: Add validation of Trello Card

  schedule:
    name: Schedule Implantation in Production
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      due_date: ${{ steps.schedule.outputs.value }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name:  Schedule Implantation
      id: schedule
      run: |
        curl -X POST -s ${{ secrets.API_GTW_URL }}/createSchedule \
          -H "Content-Type: application/json" \
          -d '{
            "repository": "${{ github.repository }}",
            "workflow_id": ${{ github.run_id }},
            "pr_number": ${{ needs.validate.outputs.pr_number }},
            "trello_card_id": "${{ needs.validate.outputs.trello_card_id }}"
          }' > res.json
        
        cat res.json

        echo "::set-output name=value::$(cat res.json | jq -r '.dueDate')"

  await:
    name: Await Implantation
    runs-on: ubuntu-latest
    needs: [schedule, validate]
    environment: prod
    env:
      GH_TOKEN: ${{ secrets.GH_SYSTEM_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get PR Number
        id: pr
        run: |
          echo "::set-output name=number::$(echo $GITHUB_REF | cut -d'/' -f3)"

      - name: Deploying in Production
        run: |
          echo "Deploying in Production at  ${{ needs.schedule.outputs.due_date }}"
          echo "The PR ${{ steps.pr.outputs.number }} will be automatically closed."
